{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":"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","sourcesContent":["import { PropertiesFallback } from 'csstype'\n\nconst ESCAPES: { [key: string]: string } = {\n  '\"': '\\\\\"',\n  '\\\\': '\\\\\\\\',\n  '\\n': '\\\\A'\n}\n\nconst ESCAPE_REGEXP = new RegExp(`[${Object.keys(ESCAPES).join('|')}]`, 'g')\n\n/**\n * Typed style object.\n *\n * Based on https://github.com/typestyle/typestyle/pull/245/files\n */\nexport interface Style extends PropertiesFallback<string | number> {\n  /** State selector */\n  '&:active'?: Style\n  '&:any'?: Style\n  '&:checked'?: Style\n  '&:default'?: Style\n  '&:disabled'?: Style\n  '&:empty'?: Style\n  '&:enabled'?: Style\n  '&:first'?: Style\n  '&:first-child'?: Style\n  '&:first-of-type'?: Style\n  '&:fullscreen'?: Style\n  '&:focus'?: Style\n  '&:hover'?: Style\n  '&:indeterminate'?: Style\n  '&:in-range'?: Style\n  '&:invalid'?: Style\n  '&:last-child'?: Style\n  '&:last-of-type'?: Style\n  '&:left'?: Style\n  '&:link'?: Style\n  '&:only-child'?: Style\n  '&:only-of-type'?: Style\n  '&:optional'?: Style\n  '&:out-of-range'?: Style\n  '&:read-only'?: Style\n  '&:read-write'?: Style\n  '&:required'?: Style\n  '&:right'?: Style\n  '&:root'?: Style\n  '&:scope'?: Style\n  '&:target'?: Style\n  '&:valid'?: Style\n  '&:visited'?: Style\n  /**\n   * Pseudo-elements\n   * https://developer.mozilla.org/en/docs/Web/CSS/Pseudo-elements\n   */\n  '&::after'?: Style\n  '&::before'?: Style\n  '&::first-letter'?: Style\n  '&::first-line'?: Style\n  '&::selection'?: Style\n  '&::backdrop'?: Style\n  '&::placeholder'?: Style\n  '&::marker'?: Style\n  '&::spelling-error'?: Style\n  '&::grammar-error'?: Style\n\n  /** Children */\n  '&>*'?: Style\n\n  /**\n   * Mobile first media query example\n   */\n  '@media screen and (min-width: 700px)'?: Style\n\n  /**\n   * Desktop first media query example\n   */\n  '@media screen and (max-width: 700px)'?: Style\n\n  [selector: string]: string | number | (string | number)[] | Style | undefined\n}\n\n/**\n * Escape a string for use in double quotes.\n */\nexport function escape (value: string) {\n  return value.replace(ESCAPE_REGEXP, x => ESCAPES[x])\n}\n\n/**\n * Quote a string for use in CSS.\n */\nexport function quote (value: string) {\n  return `\"${escape(value)}\"`\n}\n\n/**\n * Wrap a string in a CSS `url()` function.\n */\nexport function url (value: string) {\n  return `url(${quote(value)})`\n}\n\n/**\n * Turn a list of styles into an object.\n */\nexport function objectify <T extends keyof Style> (\n  styles: Array<[T | T[], Style[T]]>\n) {\n  const obj: Pick<Style, T> = Object.create(null)\n\n  for (const [key, value] of styles) {\n    if (Array.isArray(key)) {\n      for (const k of key) obj[k] = value\n    } else {\n      obj[key] = value\n    }\n  }\n\n  return obj\n}\n\n/**\n * Check if an object looks like a style.\n */\nexport function isStyle (value: any): value is Style {\n  return value !== null && typeof value === 'object' && !Array.isArray(value)\n}\n\n/**\n * Merge a list of styles together.\n */\nexport function merge (...styles: Style[]) {\n  const result: Style = Object.create(null)\n\n  for (const style of styles) {\n    for (const key of Object.keys(style)) {\n      const value = style[key]\n\n      if (isStyle(value) && isStyle(result[key])) {\n        result[key] = merge(result[key] as Style, value)\n      } else {\n        result[key] = value\n      }\n    }\n  }\n\n  return result\n}\n\n/**\n * Style sheet compatible object.\n */\nexport interface Registry {\n  registerStyle (style: Style, displayName?: string): string\n  registerKeyframes (style: Style, displayName?: string): string\n  registerHashRule (prefix: string, style: Style, displayName?: string): string\n  registerRule (rule: string, style: Style): void\n  registerCss (style: Style): void\n}\n\n/**\n * Internal registry wrapper.\n */\nexport class StyleSheetRegistry implements Registry {\n  constructor (public registry: Registry, public prefix: string) {}\n\n  registerStyle (style: Style, key = '') {\n    return this.registry.registerStyle(style, this.prefix + key)\n  }\n\n  registerKeyframes (style: Style, key = '') {\n    return this.registry.registerKeyframes(style, key)\n  }\n\n  registerHashRule (rule: string, style: Style, key = '') {\n    return this.registry.registerHashRule(rule, style, this.prefix + key)\n  }\n\n  registerRule (rule: string, style: Style) {\n    return this.registry.registerRule(rule, style)\n  }\n\n  registerCss (style: Style) {\n    return this.registry.registerCss(style)\n  }\n}\n\n/**\n * Types allowed for style objects.\n */\nexport type StyleValue = ((registry: StyleSheetRegistry) => Style) | Style\n\n/**\n * Input object for registering a style sheet.\n */\nexport type StyleSheet <T extends string> = Record<T, StyleValue>\n\n/**\n * Register a style sheet object with support for functions.\n */\nexport function registerStyleSheet <S extends string> (\n  Style: Registry,\n  sheet?: { [K in S]: StyleValue },\n  css?: StyleValue,\n  registeredName?: string\n): Record<S, string> {\n  const styles: Record<S, string> = Object.create(null)\n  const prefix = registeredName ? `${registeredName}_` : ''\n  const registry = new StyleSheetRegistry(Style, prefix)\n\n  function toStyle (style: StyleValue) {\n    return typeof style === 'function' ? style(registry) : style\n  }\n\n  // Register style properties.\n  if (typeof sheet === 'object') {\n    for (const key of Object.keys(sheet) as S[]) {\n      styles[key] = Style.registerStyle(toStyle(sheet[key]))\n    }\n  }\n\n  // Register global css when provided.\n  if (typeof css === 'object') Style.registerCss(toStyle(css))\n\n  return styles\n}\n"]}